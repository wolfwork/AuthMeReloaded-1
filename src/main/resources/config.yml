DataSource:
    # Column for storing or checking players nickname
    mySQLColumnName: username
    # Table of the database
    mySQLTablename: authme
    # Username about Database Connection Infos
    mySQLUsername: authme
    # Can be set to : file, sqlite, mysql
    backend: file
    # Column for storing players lastlogins
    mySQLColumnLastLogin: lastlogin
    # Database Name, use with converters or as SQLITE database name
    mySQLDatabase: authme
    # Database Port
    mySQLPort: '3306'
    # Column for storing players IPs
    mySQLColumnIp: ip
    # Database location
    mySQLHost: 127.0.0.1
    # Column for storing players passwords
    mySQLColumnPassword: password
    # Password about Database Connection Infos
    mySQLPassword: '12345'
    # Do we need to cache all query?
    caching: true
    # Column for SaveQuitLocation - X
    mySQLlastlocX: x
    # Column for SaveQuitLocation - Y
    mySQLlastlocY: y
    # Column for SaveQuitLocation - Z
    mySQLlastlocZ: z
    # Column for SaveQuitLocation - World name
    mySQLlastlocWorld: world
    # Column for storing players emails
    mySQLColumnEmail: email
    # Column of IDs to sort data
    mySQLColumnId: id
    # Column for Saving if a player is logged in or not
    mySQLColumnLogged: isLogged
GroupOptions:
    # if you want to set up a particulary Permission Group for
    # users that arent registered yet. Pay attention this option
    # is casesensitive!
    # Example: UnregisteredPlayerGroup: GuestUser
    UnregisteredPlayerGroup: ''
    # Same as UnregisteredGroup if u want to set a switch 
    # between unregistered and registered player group
    # set the group name below
    RegisteredPlayerGroup: ''
    # with this option you can add specified permission onJoin
    # like for example LoginBonus from another plugins, AuthMe
    # will check onJoin if player has that permissions in his Group
    # if true it add a temporany permissions to that user. This Field
    # is needed beacuse AuthMe switch all unlogged players on a
    # specified restricted Permission Group, so plugins that will use
    # some particolary permissions on join doesnt work, without
    # compiling option below!
    Permissions:
        PermissionsOnJoin: []
settings:
    sessions:
        # Do you want to enable session? When enabled 
        # the ip of a player will be bound to the nickname
        # of the player on login. As long as neither of those
        # two change players don't have to login on a reconnect
        enabled: false
        # After how many minutes a session should timeout?
        # 0 for unlimitted sessions, use 0 at your own risk!
        # consider that session will end only after timeout, and
        # if player's ip is changed but the timeout treshould isent
        # ended, player will kick out of sever for unvalidSession!
        timeout: 10
        # Do we need to timeout the session if the player is offline
        # And try to login with an another IP Address?
        sessionExpireOnIpChange: false
    restrictions:
        # Can unregistered/unlogged players chat and see chat, care , that block all commands except followers
        allowChat: false
        # Commands allowed when a player is unlogged
        allowCommands:
        - /login
        - /register
        - /l
        - /reg
        - /passpartu
        - /email
        - /captcha
        # Maximum Registration per IP default: 1
        maxRegPerIp: 1
        # max allowed nick length (Warning when you use
        # mysql and choose a value >20 you have to 
        # increase the size of the nickname column in your
        # mysql table)
        maxNicknameLength: 20
        # Player that is online arent 
        # kick out for "logged in from another
        # Location", this options will prevent players that would exploit
        # your account when you are playing
        ForceSingleSession: true
        # Teleport every time player join at World Spawn location, 
        # even if they loggedin successfully,
        #  all quit and previus location will
        # overwrite with World Spawn. Different From
        #  "teleportUnAuthedToSpawn"
        # that teleport player back to his quit or kick position, 
        # when he loggedin
        ForceSpawnLocOnJoinEnabled: false
        # This will prevent all lost of quit position, when player
        # isent loggedin
        SaveQuitLocation: false
        # For activate Restricted user by ip u need
        # to set True this option and configure the field
        # AllowedRestrctedUser as show below
        AllowRestrictedUser: false
        # Restricted user will kick players that 
        # is listed below and they dont
        # meet the match of username;ip
        # Example playername;127.0.0.1 , if playername 
        # hasent 127.0.0.1 as ip address
        # he will not be allowed to join the server
        AllowedRestrictedUser:
        - playername;127.0.0.1
        # Should unregistered players be kicked immediatly?
        kickNonRegistered: false
        # Should fail password players be kicked immediatly?
        kickOnWrongPassword: false
        # should not loged in players be teleported to spawn?
        # On login they will be teleported back to their normal
        # position
        teleportUnAuthedToSpawn: false
        # min allowed nick length 
        minNicknameLength: 3
        # Can unregistered players walk around?
        allowMovement: false
        # After what time players who fail to login or register
        # should be kicked. Set to 0 to disable.
        timeout: 30
        # Regex sintax for allowed Char in player name.
        allowedNicknameCharacters: '[a-zA-Z0-9_]*'
        # How far can unregistered players walk? Set to 0
        # for unlimited radius
        allowedMovementRadius: 100
        # Enable double check of password when you register
        # when it's true, registration require that kind of command:
        # /register <password> <confirmPassword>
        enablePasswordVerifier: true
        # Should we protect the player inventory before logging in?
        ProtectInventoryBeforeLogIn: true
        # Should we display all other accounts from a player when he joins?
        # permission: /authme.admin.accounts
        displayOtherAccounts: true
        # WorldNames where we need to force the spawn location for ForceSpawnLocOnJoinEnabled
        ForceSpawnOnTheseWorlds:
        - world
        - world_nether
        - world_the_end
        # Ban ip when the ip is not the ip registered in database
        banUnsafedIP: false
        # Spawn Priority, Values : authme, essentials, multiverse, default
        spawnPriority: authme,essentials,multiverse,default
        # Maximum Login authorized by IP
        maxLoginPerIp: 0
        # Maximum Join authorized by IP
        maxJoinPerIp: 0
        # AuthMe will NEVER teleport players !
        noTeleport: false
        # Regex sintax for allowed Chars in passwords.
        allowedPasswordCharacters: '[a-zA-Z0-9_?!@+&-]*'
    GameMode:
        # ForceSurvivalMode to player when join ?
        ForceSurvivalMode: false
        # if player join with CreativeMode and ForceSurvivalMode: true
        # inventory will be wipped
        ResetInventoryIfCreative: false
        # Do we need to force the survival mode ONLY after /login process ?
        ForceOnlyAfterLogin: false
    security:
        # minimum Length of password
        minPasswordLength: 4
        # this is very important options, 
        # every time player join the server,
        # if they are registered, AuthMe will switch him 
        # to unLoggedInGroup, this
        # should prevent all major exploit. 
        # So you can set up on your Permission Plugin
        # this special group with 0 permissions, or permissions to chat, 
        # or permission to
        # send private message or all other perms that you want, 
        # the better way is to set up
        # this group with few permissions,
        # so if player try to exploit some account,
        # they can
        # do anything except what you set in perm Group.
        # After a correct logged-in player will be 
        # moved to his correct permissions group!
        # Pay attention group name is case sensitive, 
        # so Admin is different from admin, 
        # otherwise your group will be wiped, 
        # and player join in default group []!
        # Example unLoggedinGroup: NotLogged
        unLoggedinGroup: unLoggedinGroup
        # possible values: MD5, SHA1, SHA256, WHIRLPOOL, XAUTH, MD5VB, PHPBB,
        # PLAINTEXT ( unhashed password),
        # MYBB, IPB3, PHPFUSION, SMF, XENFORO, SALTED2MD5, JOOMLA, BCRYPT, WBB3, SHA512,
        # DOUBLEMD5, PBKDF2, WORDPRESS, ROYALAUTH, CUSTOM(for developpers only)
        passwordHash: SHA256
        # salt length for the SALTED2MD5 MD5(MD5(password)+salt)
        doubleMD5SaltLength: 8
        # If password checking return false , do we need to check with all
        # other password algorithm to check an old password ?
        # AuthMe will update the password to the new passwordHash !
        supportOldPasswordHash: false
        # Cancel unsafe passwords for being used, put them on lowercase!
        #unsafePasswords:
        #- '123456'
        #- 'password'
        unsafePasswords: []
    registration:
        # enable registration on the server?
        enabled: true
        # Send every X seconds a message to a player to
        # remind him that he has to login/register
        messageInterval: 5
        # Only registered and logged in players can play.
        # See restrictions for exceptions
        force: true
        # Does we replace password registration by an Email registration method ?
        enableEmailRegistrationSystem: false
        # Enable double check of email when you register
        # when it's true, registration require that kind of command:
        # /register <email> <confirmEmail>
        doubleEmailCheck: false
        # Do we force kicking player after a successful registration ?
        # Do not use with login feature below
        forceKickAfterRegister: false
        # Does AuthMe need to enforce a /login after a successful registration ?
        forceLoginAfterRegister: false
    unrestrictions:
        # below you can list all your account name, that
        # AuthMe will ignore for registration or login, configure it
        # at your own risk!! Remember that if you are going to add
        # nickname with [], you have to delimit name with ' '.
        # this option add compatibility with BuildCraft and some
        # other mods.
        # It is CaseSensitive!
        UnrestrictedName: []
    # Message language, available : en, de, br, cz, pl, fr, ru, hu, sk, es, zhtw, fi, zhcn, lt, it, ko, pt
    messagesLanguage: en
    # Force these commands after /login, without any '/', use %p for replace with player name
    forceCommands: []
    # Force these commands after /login as a server console, without any '/', use %p for replace with player name
    forceCommandsAsConsole: []
    # Force these commands after /register, without any '/', use %p for replace with player name
    forceRegisterCommands: []
    # Force these commands after /register as a server console, without any '/', use %p for replace with player name
    forceRegisterCommandsAsConsole: []
    # Do we need to display the welcome message (welcome.txt) after a register or a login?
    # You can use colors in this welcome.txt + some replaced strings : 
    # {PLAYER} : player name, {ONLINE} : display number of online players, {MAXPLAYERS} : display server slots,
    # {IP} : player ip, {LOGINS} : number of players logged, {WORLD} : player current world, {SERVER} : server name
    # {VERSION} : get current bukkit version, {COUNTRY} : player country
    useWelcomeMessage: true
    # Do we need to broadcast the welcome message to all server or only to the player? set true for server or false for player
    broadcastWelcomeMessage: false
    # Do we need to delay the X has joined the game after /login ?
    delayJoinMessage: false
    # Do we need to add potion effect Blinding before login/register ?
    applyBlindEffect: false
ExternalBoardOptions:
    # MySQL column for the salt , needed for some forum/cms support
    mySQLColumnSalt: ''
    # MySQL column for the group, needed for some forum/cms support
    mySQLColumnGroup: ''
    # -1 mean disabled. If u want that only
    # activated player can login in your server
    # u can put in this options the group number
    # of unactivated user, needed for some forum/cms support
    nonActivedUserGroup: -1
    # Other MySQL columns where we need to put the Username (case sensitive)
    mySQLOtherUsernameColumns: []
    # How much Log to Round needed in BCrypt(do not change it if you do not know what's your doing)
    bCryptLog2Round: 10
    # phpBB prefix defined during phpbb installation process
    phpbbTablePrefix: 'phpbb_'
    # phpBB activated group id , 2 is default registered group defined by phpbb
    phpbbActivatedGroupId: 2
    # WordPress prefix defined during WordPress installation process
    wordpressTablePrefix: 'wp_'
permission:
    # take care with this options, if u dont want
    # to use Vault and Group Switching of
    # AuthMe for unloggedIn players put False
    # below, default is true.
    EnablePermissionCheck: false
BackupSystem:
   # Enable or Disable Automatic Backup
    ActivateBackup: false
   # set Backup at every start of Server
    OnServerStart: false
   # set Backup at every stop of Server
    OnServerStop: true
   # Windows only mysql installation Path
    MysqlWindowsPath: 'C:\\Program Files\\MySQL\\MySQL Server 5.1\\'
Passpartu:
    # Enable or Disable Passpartu Feature,
    # this feature let Admin Login with all registered 
    # Account they need, for example inspecting Player that
    # is doing shit, they can login without know any 
    # Player password! More info on How TO
    enablePasspartu: false
Security:
    SQLProblem:
        # Stop the server if we can't contact the sql database
        # Take care with this, if you set that to false,
        # AuthMe automatically disable and the server is not protected!
        stopServer: true
    ReloadCommand:
        # /reload support
        useReloadCommandSupport: true
    console:
        # Remove spam console
        noConsoleSpam: false
        # Replace passwords in the console when player type a command like /login
        removePassword: true
    captcha:
        # Player need to put a captcha when he fails too lot the password
        useCaptcha: false
        # Max allowed tries before request a captcha
        maxLoginTry: 5
        # Captcha length
        captchaLength: 5
Converter:
    Rakamak:
        # Rakamak file name
        fileName: users.rak
        # Rakamak use ip ?
        useIP: false
        # IP file name for rakamak
        ipFileName: UsersIp.rak
    CrazyLogin:
        # CrazyLogin database file
        fileName: accounts.db
Email:
    # Email SMTP server host
    mailSMTP: smtp.gmail.com
    # Email SMTP server port
    mailPort: 465
    # Email account that send the mail
    mailAccount: ''
    # Email account password
    mailPassword: ''
    # Custom SenderName, that replace the mailAccount name in the email
    mailSenderName: ''
    # Random password length
    RecoveryPasswordLength: 8
    # Email subject of password get
    mailSubject: 'Your new AuthMe Password'
    # Email text here
    mailText: 'Dear <playername>, <br /><br /> This is your new AuthMe password for the server <br /><br /> <servername> : <br /><br /> <generatedpass><br /><br />Do not forget to change password after login! <br /> /changepassword <generatedpass> newPassword'
    # Like maxRegPerIp but with email
    maxRegPerEmail: 1
    # Recall players to add an email ?
    recallPlayers: false
    # Delay in minute for the recall scheduler
    delayRecall: 5
    # Blacklist these domains for emails
    emailBlacklisted:
    - 10minutemail.com
    # WhiteList only these domains for emails
    emailWhitelisted: []
Hooks:
    # Do we need to hook with multiverse for spawn checking?
    multiverse: true
    # Do we need to hook with ChestShop for prevent buy or selling ?
    chestshop: true
    # Do we need to hook with BungeeCord for get the real Player ip ?
    bungeecord: false
    # Do we need to hook with Notifications for Notifs sending ?
    notifications: true
    # Do we need to disable Essentials SocialSpy on join ?
    disableSocialSpy: true
    # Do we need to force /motd Essentials command on join ?
    useEssentialsMotd: false
Performances:
    # HIGHLY recommended to use this! This will increase database performance
    # Default is true, change it to false if you experience issues
    useMultiThreading: true
Purge:
    # On Enable , does AuthMe need to purge automatically old accounts unused ?
    useAutoPurge: false
    # Number of Days an account become Unused
    daysBeforeRemovePlayer: 60
    # Do we need to remove the player.dat file during purge process ?
    removePlayerDat: false
    # Do we need to remove the Essentials/users/player.yml file during purge process ?
    removeEssentialsFile: false
    # World where are players.dat stores
    defaultWorld: 'world'
    # Do we need to remove LimitedCreative/inventories/player.yml , player_creative.yml files during purge process ?
    removeLimitedCreativesInventories: false
    # Do we need to remove the AntiXRayData/PlayerData/player file during purge process ?
    removeAntiXRayFile: false
Protection:
    # Enable some servers protection ( country based login, antibot )
    enableProtection: false
    # Countries allowed to join the server and register, see http://dev.bukkit.org/bukkit-plugins/authme-reloaded/pages/countries-codes/ for countries' codes
    countries:
    - US
    - GB
    # Countries blacklisted automatically ( without any needed to enable protection )
    countriesBlacklist:
    - A1
    # Do we need to enable automatic antibot system?
    enableAntiBot: false
    # Max number of player allowed to login in 5 secs before enable AntiBot system automatically
    antiBotSensibility: 5
    # Duration in minutes of the antibot automatic system
    antiBotDuration: 10
VeryGames:
    # These features are only available on VeryGames Server Provider
    enableIpCheck: false